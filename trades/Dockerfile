# Source: https://cloud.google.com/community/tutorials/deploy-react-nginx-cloud-run

# build environment
FROM node:16.13.1-alpine as build
WORKDIR /app
ENV PATH /app/node_modules/.bin:$PATH

RUN apk add --no-cache git

# Install depends on chart-setup.sh and charting library directory
COPY package*.json *yarn.lock ./
COPY .npmrc .npmrc
RUN yarn install

COPY . ./

#RUN npm install react-scripts@4.0.3 -g --silent
ARG REACT_APP_HASURA_API_ENDPOINT_WS=
ENV REACT_APP_HASURA_API_ENDPOINT_WS=$REACT_APP_HASURA_API_ENDPOINT_WS
ARG REACT_APP_HASURA_ADMIN_SECRET=
ENV REACT_APP_HASURA_ADMIN_SECRET=$REACT_APP_HASURA_ADMIN_SECRET
ARG REACT_APP_GA_CODE=
ENV REACT_APP_GA_CODE=$REACT_APP_GA_CODE
ARG REACT_APP_ENABLE_RINKEBY="false"
ENV REACT_APP_ENABLE_RINKEBY=$REACT_APP_ENABLE_RINKEBY
ARG REACT_APP_ENABLE_VELOX_WIDGET_MODE="true"
ENV REACT_APP_ENABLE_VELOX_WIDGET_MODE=$REACT_APP_ENABLE_VELOX_WIDGET_MODE
ARG REACT_APP_ENABLE_VELOX_WIDGET_TEST="false"
ENV REACT_APP_ENABLE_VELOX_WIDGET_TEST=$REACT_APP_ENABLE_VELOX_WIDGET_TEST
ARG REACT_APP_STRATEGY_API_URI=
ENV REACT_APP_STRATEGY_API_URI=$REACT_APP_STRATEGY_API_URI
ARG REACT_APP_STRATEGY_API_KEY=
ENV REACT_APP_STRATEGY_API_KEY=$REACT_APP_STRATEGY_API_KEY
ARG REACT_APP_TOKEN_SYNC_URI=
ENV REACT_APP_TOKEN_SYNC_URI=$REACT_APP_TOKEN_SYNC_URI
ARG REACT_APP_ROME_ENV=
ENV REACT_APP_ROME_ENV=$REACT_APP_ROME_ENV
ARG REACT_APP_KYBER_KRYSTAL_API=
ENV REACT_APP_KYBER_KRYSTAL_API=$REACT_APP_KYBER_KRYSTAL_API
ARG REACT_APP_KYBER_AGGREGATOR_STATS_API=
ENV REACT_APP_KYBER_AGGREGATOR_STATS_API=$REACT_APP_KYBER_AGGREGATOR_STATS_API
ARG REACT_APP_KYBER_AGGREGATOR_API=
ENV REACT_APP_KYBER_AGGREGATOR_API=$REACT_APP_KYBER_AGGREGATOR_API
ARG REACT_APP_KYBER_INFURA_KEY=
ENV REACT_APP_KYBER_INFURA_KEY=$REACT_APP_KYBER_INFURA_KEY
ARG REACT_APP_KYBER_MAINNET_ENV=
ENV REACT_APP_KYBER_MAINNET_ENV=$REACT_APP_KYBER_MAINNET_ENV
ARG REACT_APP_SHARE_PROXY_URL=
ENV REACT_APP_SHARE_PROXY_URL=$REACT_APP_SHARE_PROXY_URL
ARG GENERATE_SOURCEMAP=false
ENV GENERATE_SOURCEMAP=$GENERATE_SOURCEMAP

RUN yarn build

# production environment
FROM nginx:stable-alpine
COPY --from=build /app/build /usr/share/nginx/html
COPY nginx.conf /etc/nginx/conf.d/default.conf
EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]